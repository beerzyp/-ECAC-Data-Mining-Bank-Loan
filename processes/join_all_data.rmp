<?xml version="1.0" encoding="UTF-8"?><process version="9.4.001">
  <context>
    <input/>
    <output/>
    <macros/>
  </context>
  <operator activated="true" class="process" compatibility="9.4.001" expanded="true" name="Process">
    <parameter key="logverbosity" value="init"/>
    <parameter key="random_seed" value="2001"/>
    <parameter key="send_mail" value="never"/>
    <parameter key="notification_email" value=""/>
    <parameter key="process_duration_for_mail" value="30"/>
    <parameter key="encoding" value="SYSTEM"/>
    <process expanded="true">
      <operator activated="true" class="subprocess" compatibility="9.4.001" expanded="true" height="82" name="Loan/Transaction Pre" width="90" x="179" y="136">
        <process expanded="true">
          <operator activated="true" class="retrieve" compatibility="9.4.001" expanded="true" height="68" name="Retrieve loan_train" width="90" x="45" y="34">
            <parameter key="repository_entry" value="../data_transformed/loan_train"/>
          </operator>
          <operator activated="true" class="retrieve" compatibility="9.4.001" expanded="true" height="68" name="Retrieve trans_train" width="90" x="45" y="136">
            <parameter key="repository_entry" value="../data_transformed/trans_train"/>
          </operator>
          <operator activated="true" class="set_role" compatibility="9.4.001" expanded="true" height="82" name="Set Role" width="90" x="179" y="136">
            <parameter key="attribute_name" value="trans_id"/>
            <parameter key="target_role" value="regular"/>
            <list key="set_additional_roles"/>
          </operator>
          <operator activated="true" class="concurrency:join" compatibility="9.4.001" expanded="true" height="82" name="Join" width="90" x="313" y="85">
            <parameter key="remove_double_attributes" value="true"/>
            <parameter key="join_type" value="inner"/>
            <parameter key="use_id_attribute_as_key" value="false"/>
            <list key="key_attributes">
              <parameter key="account_id" value="account_id"/>
            </list>
            <parameter key="keep_both_join_attributes" value="false"/>
          </operator>
          <operator activated="true" class="generate_empty_attribute" compatibility="9.4.001" expanded="true" height="82" name="Generate Empty Attribute (3)" width="90" x="581" y="85">
            <parameter key="name" value="diff_bal_loan"/>
            <parameter key="value_type" value="real"/>
          </operator>
          <operator activated="true" class="generate_empty_attribute" compatibility="9.4.001" expanded="true" height="82" name="Generate Empty Attribute (4)" width="90" x="715" y="85">
            <parameter key="name" value="diff_bal_loan_2"/>
            <parameter key="value_type" value="real"/>
          </operator>
          <operator activated="true" class="execute_script" compatibility="9.4.001" expanded="true" height="82" name="Execute Script" width="90" x="849" y="85">
            <parameter key="script" value="import java.util.concurrent.*; &#10;import java.util.Date; &#10;import com.rapidminer.tools.Ontology;&#10;&#10;IOObject inputData = input[0];&#10;Attribute loanId =     inputData.getAttributes().get(&quot;loan_id&quot;);&#10;Attribute date =     inputData.getAttributes().get(&quot;dateOfTrans&quot;);&#10;Attribute transferId = inputData.getAttributes().get(&quot;trans_id&quot;);&#10;Attribute diffBalLoan = inputData.getAttributes().get(&quot;diff_bal_loan&quot;);&#10;Attribute balance = inputData.getAttributes().get(&quot;balance&quot;);&#10;Attribute payments = inputData.getAttributes().get(&quot;payments&quot;);&#10;Attribute diffBalLoan2 = inputData.getAttributes().get(&quot;diff_bal_loan_2&quot;);&#10;public class Tuple&lt;X, Y&gt; { &#10;  public final X x; &#10;  public final Y y; &#10;  public Tuple(X x, Y y) { &#10;    this.x = x; &#10;    this.y = y; &#10;  } &#10;  public getX(){&#10;  &#9;return this.x;&#10;  }&#10;  public getY(){&#10;  &#9;return this.y;&#10;  }&#10;} &#10;int loanIt = 0;&#10;int loanItf = 0;&#10;int transfer_id = 0;&#10;long newDate = 0L;&#10;Date converted = null;&#10;Tuple&lt;Date,Integer&gt; values;&#10;Tuple&lt;Date,Long&gt; f_values;&#10;Attribute accurateBalance =  AttributeFactory.createAttribute(&quot;accurateBalance&quot;, 3);&#10;Attribute removeMoney =  AttributeFactory.createAttribute(&quot;removeMoney&quot;, Ontology.REAL);&#10;Attribute addMoney =  AttributeFactory.createAttribute(&quot;addMoney&quot;, Ontology.REAL);&#10;Attribute gainMoney =  AttributeFactory.createAttribute(&quot;gainMoney&quot;, Ontology.REAL);&#10;Attribute lostMoney =  AttributeFactory.createAttribute(&quot;lostMoney&quot;, Ontology.REAL);&#10;Attribute monthWon =  AttributeFactory.createAttribute(&quot;MonthWon&quot;, Ontology.REAL);&#10;Attribute monthLost =  AttributeFactory.createAttribute(&quot;MonthLost&quot;, Ontology.REAL);&#10;Attribute totalDiff =  AttributeFactory.createAttribute(&quot;TotalDiff&quot;, Ontology.REAL);&#10;inputData.getExampleTable().addAttribute(accurateBalance);&#10;inputData.getAttributes().addRegular(accurateBalance);&#10;inputData.getExampleTable().addAttribute(removeMoney);&#10;inputData.getAttributes().addRegular(removeMoney);&#10;inputData.getExampleTable().addAttribute(addMoney);&#10;inputData.getAttributes().addRegular(addMoney);&#10;inputData.getExampleTable().addAttribute(gainMoney);&#10;inputData.getAttributes().addRegular(gainMoney);&#10;inputData.getExampleTable().addAttribute(lostMoney);&#10;inputData.getAttributes().addRegular(lostMoney);&#10;inputData.getExampleTable().addAttribute(monthWon);&#10;inputData.getAttributes().addRegular(monthWon);&#10;inputData.getExampleTable().addAttribute(monthLost);&#10;inputData.getAttributes().addRegular(monthLost);&#10;inputData.getExampleTable().addAttribute(totalDiff);&#10;inputData.getAttributes().addRegular(totalDiff);&#10;&#10;HashMap&lt;Long, Tuple&lt;Date,Integer&gt;&gt; loanDate = new HashMap&lt;Long, Tuple&lt;Date,Integer&gt;&gt;();&#10;HashMap&lt;Long, Tuple&lt;Date,Integer&gt;&gt; firstBal = new HashMap&lt;Long, Tuple&lt;Date,Integer&gt;&gt;();&#10;HashMap&lt;Long, Integer&gt; firstBal_2 = new HashMap&lt;Long, Integer&gt;();&#10;IOObject finalSet;&#10;long prev_bal = 0;&#10;long add = 0;&#10;long rem = 0;&#10;long total_gain = 0;&#10;long total_lost = 0;&#10;for(Example e : inputData){ //a cada loanId&#10;&#9;long cenas = e.getValue(date);&#10;&#9;converted = new Date(cenas);&#10;&#9;long key = e.getValue(loanId);&#10;&#9;transfer_id = e.getValue(transferId);&#10;&#9;long bal = e.getValue(balance);&#10;&#9;f_values = new Tuple(converted,bal);&#10;&#9;values = new Tuple(converted,transfer_id);&#10;&#9;if(loanDate.containsKey(key)) {&#9;&#10;&#9;&#9;loanDate.put(key,values);&#10;&#9;&#9;int aux = firstBal_2.get(key);&#10;&#9;&#9;firstBal_2.put(key, ++aux);&#10;&#9;&#9;if(bal &gt; prev_bal) {&#10;&#9;&#9;&#9;add++;&#10;&#9;&#9;&#9;total_gain += (bal - prev_bal);&#10;&#9;&#9;&#9;e.setValue(addMoney, add);&#10;&#9;&#9;&#9;e.setValue(removeMoney, rem);&#10;&#9;&#9;&#9;e.setValue(gainMoney,total_gain);&#10;&#9;&#9;&#9;e.setValue(lostMoney,total_lost);&#10;&#9;&#9;} else {&#10;&#9;&#9;&#9;rem++;&#10;&#9;&#9;&#9;total_lost -= (bal - prev_bal);&#10;&#9;&#9;&#9;e.setValue(addMoney, add);&#10;&#9;&#9;&#9;e.setValue(removeMoney, rem);&#10;&#9;&#9;&#9;e.setValue(gainMoney,total_gain);&#10;&#9;&#9;&#9;e.setValue(lostMoney,total_lost);&#10;&#9;&#9;}&#10;&#9;&#9;prev_bal = e.getValue(balance);&#10;&#9;} else {&#10;&#9;&#9;loanDate.put(key, values);&#10;&#9;&#9;firstBal.put(key, f_values);&#10;&#9;&#9;firstBal_2.put(key, 1);&#10;&#9;&#9;prev_bal = e.getValue(balance);&#10;&#9;&#9;e.setValue(removeMoney,0);&#10;&#9;&#9;e.setValue(addMoney,0);&#10;&#9;&#9;e.setValue(gainMoney,0);&#10;&#9;&#9;e.setValue(lostMoney,0);&#10;&#9;&#9;add = 0;&#10;&#9;&#9;rem = 0;&#10;&#9;&#9;total_gain = 0;&#10;&#9;&#9;total_lost = 0;&#10;&#9;}&#10;&#10;}&#10;&#10;for (Long name: loanDate.keySet()){&#10;            long key = name;&#10;            Tuple&lt;Date,Integer&gt; f_value = firstBal.get(name);&#10;            Tuple&lt;Date,Integer&gt; value = loanDate.get(name);  &#10;            int first_trans = f_value.getY();&#10;            int transfer_ids = value.getY();&#10;            Date loan_date = value.getX();&#10;            Date first_date = f_value.getX();&#10;            for(Example k : inputData){&#10;            &#9;int compareId = k.getValue(transferId);&#10;            &#9;if(compareId==transfer_ids){&#10;            &#9;&#9;k.setValue(accurateBalance,1);&#10;            &#9;&#9;int m1 = first_date.getYear() * 12 + first_date.getMonth();&#10;    &#9;&#9;&#9;&#9;int m2 = loan_date.getYear() * 12 + loan_date.getMonth();&#10;    &#9;&#9;&#9;&#9;long calc = (k.getValue(balance) - first_trans) - (m2 - m1 + 1) * k.getValue(payments);&#10;            &#9;&#9;k.setValue(diffBalLoan, calc);&#10;            &#9;&#9;calc = (k.getValue(balance) - first_trans) - (m2 - m1 + 1) * k.getValue(payments);&#10;            &#9;&#9;k.setValue(diffBalLoan2, calc);&#10;            &#9;&#9;k.setValue(monthWon, k.getValue(gainMoney) / (m2 - m1 + 1));&#10;            &#9;&#9;k.setValue(monthLost, k.getValue(lostMoney) / (m2 - m1 + 1));&#10;            &#9;&#9;k.setValue(totalDiff, k.getValue(gainMoney) / k.getValue(lostMoney));&#10;            &#9;&#9;break;&#10;            &#9;}            &#9;&#10;            }         &#10;} &#10;// This line returns the first input as the first output&#10;return inputData;"/>
            <parameter key="standard_imports" value="true"/>
          </operator>
          <operator activated="true" class="filter_examples" compatibility="9.4.001" expanded="true" height="103" name="Filter Examples" width="90" x="983" y="85">
            <parameter key="parameter_string" value="accurateBalance=1"/>
            <parameter key="parameter_expression" value=""/>
            <parameter key="condition_class" value="attribute_value_filter"/>
            <parameter key="invert_filter" value="false"/>
            <list key="filters_list"/>
            <parameter key="filters_logic_and" value="true"/>
            <parameter key="filters_check_metadata" value="true"/>
          </operator>
          <connect from_op="Retrieve loan_train" from_port="output" to_op="Join" to_port="left"/>
          <connect from_op="Retrieve trans_train" from_port="output" to_op="Set Role" to_port="example set input"/>
          <connect from_op="Set Role" from_port="example set output" to_op="Join" to_port="right"/>
          <connect from_op="Join" from_port="join" to_op="Generate Empty Attribute (3)" to_port="example set input"/>
          <connect from_op="Generate Empty Attribute (3)" from_port="example set output" to_op="Generate Empty Attribute (4)" to_port="example set input"/>
          <connect from_op="Generate Empty Attribute (4)" from_port="example set output" to_op="Execute Script" to_port="input 1"/>
          <connect from_op="Execute Script" from_port="output 1" to_op="Filter Examples" to_port="example set input"/>
          <connect from_op="Filter Examples" from_port="example set output" to_port="out 1"/>
          <portSpacing port="source_in 1" spacing="0"/>
          <portSpacing port="sink_out 1" spacing="0"/>
          <portSpacing port="sink_out 2" spacing="0"/>
        </process>
      </operator>
      <operator activated="true" class="select_attributes" compatibility="9.4.001" expanded="true" height="82" name="Loan/Transaction" width="90" x="380" y="136">
        <parameter key="attribute_filter_type" value="single"/>
        <parameter key="attribute" value="accurateBalance"/>
        <parameter key="attributes" value=""/>
        <parameter key="use_except_expression" value="false"/>
        <parameter key="value_type" value="attribute_value"/>
        <parameter key="use_value_type_exception" value="false"/>
        <parameter key="except_value_type" value="time"/>
        <parameter key="block_type" value="attribute_block"/>
        <parameter key="use_block_type_exception" value="false"/>
        <parameter key="except_block_type" value="value_matrix_row_start"/>
        <parameter key="invert_selection" value="true"/>
        <parameter key="include_special_attributes" value="false"/>
      </operator>
      <operator activated="true" class="retrieve" compatibility="9.4.001" expanded="true" height="68" name="Retrieve card_train" width="90" x="179" y="646">
        <parameter key="repository_entry" value="../data_transformed/card_train"/>
      </operator>
      <operator activated="true" class="set_role" compatibility="9.4.001" expanded="true" height="82" name="Set Role (2)" width="90" x="313" y="646">
        <parameter key="attribute_name" value="card_id"/>
        <parameter key="target_role" value="regular"/>
        <list key="set_additional_roles"/>
      </operator>
      <operator activated="true" class="rename" compatibility="9.4.001" expanded="true" height="82" name="Rename" width="90" x="581" y="595">
        <parameter key="old_name" value="type"/>
        <parameter key="new_name" value="typeOfCard"/>
        <list key="rename_additional_attributes"/>
        <description align="center" color="transparent" colored="false" width="126">Card Disposition&lt;br/&gt;by Client/Account&lt;br/&gt;</description>
      </operator>
      <operator activated="true" class="retrieve" compatibility="9.4.001" expanded="true" height="68" name="Retrieve disp" width="90" x="179" y="544">
        <parameter key="repository_entry" value="../data_transformed/disp"/>
      </operator>
      <operator activated="true" class="set_role" compatibility="9.4.001" expanded="true" height="82" name="Set Role (6)" width="90" x="313" y="544">
        <parameter key="attribute_name" value="disp_id"/>
        <parameter key="target_role" value="regular"/>
        <list key="set_additional_roles"/>
      </operator>
      <operator activated="true" class="retrieve" compatibility="9.4.001" expanded="true" height="68" name="Retrieve client" width="90" x="179" y="442">
        <parameter key="repository_entry" value="../data_transformed/client"/>
      </operator>
      <operator activated="true" class="concurrency:join" compatibility="9.4.001" expanded="true" height="82" name="Join (4)" width="90" x="447" y="493">
        <parameter key="remove_double_attributes" value="true"/>
        <parameter key="join_type" value="inner"/>
        <parameter key="use_id_attribute_as_key" value="false"/>
        <list key="key_attributes">
          <parameter key="client_id" value="client_id"/>
        </list>
        <parameter key="keep_both_join_attributes" value="false"/>
      </operator>
      <operator activated="true" class="set_role" compatibility="9.4.001" expanded="true" height="82" name="Set Role (7)" width="90" x="581" y="493">
        <parameter key="attribute_name" value="client_id"/>
        <parameter key="target_role" value="regular"/>
        <list key="set_additional_roles">
          <parameter key="client_id" value="regular"/>
          <parameter key="type_disp" value="regular"/>
        </list>
      </operator>
      <operator activated="true" class="retrieve" compatibility="9.4.001" expanded="true" height="68" name="Retrieve district" width="90" x="179" y="340">
        <parameter key="repository_entry" value="../data_transformed/district"/>
      </operator>
      <operator activated="true" class="set_role" compatibility="9.4.001" expanded="true" height="82" name="Set Role (3)" width="90" x="313" y="340">
        <parameter key="attribute_name" value="district_id"/>
        <parameter key="target_role" value="regular"/>
        <list key="set_additional_roles"/>
      </operator>
      <operator activated="true" class="retrieve" compatibility="9.4.001" expanded="true" height="68" name="Retrieve account" width="90" x="179" y="238">
        <parameter key="repository_entry" value="../data_transformed/account"/>
      </operator>
      <operator activated="true" class="rename" compatibility="9.4.001" expanded="true" height="82" name="Rename (2)" width="90" x="313" y="238">
        <parameter key="old_name" value="date"/>
        <parameter key="new_name" value="dateOfAccount"/>
        <list key="rename_additional_attributes"/>
      </operator>
      <operator activated="true" class="concurrency:join" compatibility="9.4.001" expanded="true" height="82" name="Account/Demographic" width="90" x="447" y="289">
        <parameter key="remove_double_attributes" value="true"/>
        <parameter key="join_type" value="inner"/>
        <parameter key="use_id_attribute_as_key" value="false"/>
        <list key="key_attributes">
          <parameter key="district_id" value="district_id"/>
        </list>
        <parameter key="keep_both_join_attributes" value="false"/>
      </operator>
      <operator activated="true" class="select_attributes" compatibility="9.4.001" expanded="true" height="82" name="Select Attributes" width="90" x="648" y="289">
        <parameter key="attribute_filter_type" value="single"/>
        <parameter key="attribute" value="district_id"/>
        <parameter key="attributes" value=""/>
        <parameter key="use_except_expression" value="false"/>
        <parameter key="value_type" value="attribute_value"/>
        <parameter key="use_value_type_exception" value="false"/>
        <parameter key="except_value_type" value="time"/>
        <parameter key="block_type" value="attribute_block"/>
        <parameter key="use_block_type_exception" value="false"/>
        <parameter key="except_block_type" value="value_matrix_row_start"/>
        <parameter key="invert_selection" value="true"/>
        <parameter key="include_special_attributes" value="false"/>
      </operator>
      <operator activated="true" class="concurrency:join" compatibility="9.4.001" expanded="true" height="82" name="Join (5)" width="90" x="782" y="136">
        <parameter key="remove_double_attributes" value="false"/>
        <parameter key="join_type" value="inner"/>
        <parameter key="use_id_attribute_as_key" value="false"/>
        <list key="key_attributes">
          <parameter key="account_id" value="account_id"/>
        </list>
        <parameter key="keep_both_join_attributes" value="false"/>
      </operator>
      <operator activated="true" class="concurrency:join" compatibility="9.4.001" expanded="true" height="82" name="Join (2)" width="90" x="916" y="289">
        <parameter key="remove_double_attributes" value="true"/>
        <parameter key="join_type" value="inner"/>
        <parameter key="use_id_attribute_as_key" value="false"/>
        <list key="key_attributes">
          <parameter key="account_id" value="account_id"/>
        </list>
        <parameter key="keep_both_join_attributes" value="false"/>
      </operator>
      <operator activated="true" class="concurrency:join" compatibility="9.4.001" expanded="true" height="82" name="Join (3)" width="90" x="1050" y="442">
        <parameter key="remove_double_attributes" value="true"/>
        <parameter key="join_type" value="left"/>
        <parameter key="use_id_attribute_as_key" value="false"/>
        <list key="key_attributes">
          <parameter key="disp_id" value="disp_id"/>
        </list>
        <parameter key="keep_both_join_attributes" value="false"/>
      </operator>
      <operator activated="true" class="generate_empty_attribute" compatibility="9.4.001" expanded="true" height="82" name="Generate Empty Attribute" width="90" x="1184" y="442">
        <parameter key="name" value="percPayment"/>
        <parameter key="value_type" value="real"/>
      </operator>
      <operator activated="true" class="generate_empty_attribute" compatibility="9.4.001" expanded="true" height="82" name="Generate Empty Attribute (2)" width="90" x="1318" y="442">
        <parameter key="name" value="numClients"/>
        <parameter key="value_type" value="integer"/>
      </operator>
      <operator activated="true" class="subprocess" compatibility="9.4.001" expanded="true" height="82" name="Loan/Transaction Pre (2)" width="90" x="179" y="799">
        <process expanded="true">
          <operator activated="true" class="retrieve" compatibility="9.4.001" expanded="true" height="68" name="Retrieve loan_test" width="90" x="45" y="34">
            <parameter key="repository_entry" value="../data_transformed/loan_test"/>
          </operator>
          <operator activated="true" class="retrieve" compatibility="9.4.001" expanded="true" height="68" name="Retrieve trans_test" width="90" x="45" y="136">
            <parameter key="repository_entry" value="../data_transformed/trans_test"/>
          </operator>
          <operator activated="true" class="set_role" compatibility="9.4.001" expanded="true" height="82" name="Set Role (4)" width="90" x="179" y="136">
            <parameter key="attribute_name" value="trans_id"/>
            <parameter key="target_role" value="regular"/>
            <list key="set_additional_roles"/>
          </operator>
          <operator activated="true" class="concurrency:join" compatibility="9.4.001" expanded="true" height="82" name="Join (6)" width="90" x="313" y="85">
            <parameter key="remove_double_attributes" value="true"/>
            <parameter key="join_type" value="inner"/>
            <parameter key="use_id_attribute_as_key" value="false"/>
            <list key="key_attributes">
              <parameter key="account_id" value="account_id"/>
            </list>
            <parameter key="keep_both_join_attributes" value="false"/>
          </operator>
          <operator activated="true" class="generate_empty_attribute" compatibility="9.4.001" expanded="true" height="82" name="Generate Empty Attribute (5)" width="90" x="447" y="85">
            <parameter key="name" value="diff_bal_loan"/>
            <parameter key="value_type" value="real"/>
          </operator>
          <operator activated="true" class="generate_empty_attribute" compatibility="9.4.001" expanded="true" height="82" name="Generate Empty Attribute (6)" width="90" x="514" y="238">
            <parameter key="name" value="diff_bal_loan_2"/>
            <parameter key="value_type" value="real"/>
          </operator>
          <operator activated="true" class="execute_script" compatibility="9.4.001" expanded="true" height="82" name="Execute Script (3)" width="90" x="581" y="85">
            <parameter key="script" value="import java.util.concurrent.*; &#10;import java.util.Date; &#10;import com.rapidminer.tools.Ontology;&#10;&#10;IOObject inputData = input[0];&#10;Attribute loanId =     inputData.getAttributes().get(&quot;loan_id&quot;);&#10;Attribute date =     inputData.getAttributes().get(&quot;dateOfTrans&quot;);&#10;Attribute transferId = inputData.getAttributes().get(&quot;trans_id&quot;);&#10;Attribute diffBalLoan = inputData.getAttributes().get(&quot;diff_bal_loan&quot;);&#10;Attribute balance = inputData.getAttributes().get(&quot;balance&quot;);&#10;Attribute payments = inputData.getAttributes().get(&quot;payments&quot;);&#10;Attribute diffBalLoan2 = inputData.getAttributes().get(&quot;diff_bal_loan_2&quot;);&#10;public class Tuple&lt;X, Y&gt; { &#10;  public final X x; &#10;  public final Y y; &#10;  public Tuple(X x, Y y) { &#10;    this.x = x; &#10;    this.y = y; &#10;  } &#10;  public getX(){&#10;  &#9;return this.x;&#10;  }&#10;  public getY(){&#10;  &#9;return this.y;&#10;  }&#10;} &#10;int loanIt = 0;&#10;int loanItf = 0;&#10;int transfer_id = 0;&#10;long newDate = 0L;&#10;Date converted = null;&#10;Tuple&lt;Date,Integer&gt; values;&#10;Tuple&lt;Date,Long&gt; f_values;&#10;Attribute accurateBalance =  AttributeFactory.createAttribute(&quot;accurateBalance&quot;, 3);&#10;Attribute removeMoney =  AttributeFactory.createAttribute(&quot;removeMoney&quot;, Ontology.REAL);&#10;Attribute addMoney =  AttributeFactory.createAttribute(&quot;addMoney&quot;, Ontology.REAL);&#10;Attribute gainMoney =  AttributeFactory.createAttribute(&quot;gainMoney&quot;, Ontology.REAL);&#10;Attribute lostMoney =  AttributeFactory.createAttribute(&quot;lostMoney&quot;, Ontology.REAL);&#10;Attribute monthWon =  AttributeFactory.createAttribute(&quot;MonthWon&quot;, Ontology.REAL);&#10;Attribute monthLost =  AttributeFactory.createAttribute(&quot;MonthLost&quot;, Ontology.REAL);&#10;Attribute totalDiff =  AttributeFactory.createAttribute(&quot;TotalDiff&quot;, Ontology.REAL);&#10;inputData.getExampleTable().addAttribute(accurateBalance);&#10;inputData.getAttributes().addRegular(accurateBalance);&#10;inputData.getExampleTable().addAttribute(removeMoney);&#10;inputData.getAttributes().addRegular(removeMoney);&#10;inputData.getExampleTable().addAttribute(addMoney);&#10;inputData.getAttributes().addRegular(addMoney);&#10;inputData.getExampleTable().addAttribute(gainMoney);&#10;inputData.getAttributes().addRegular(gainMoney);&#10;inputData.getExampleTable().addAttribute(lostMoney);&#10;inputData.getAttributes().addRegular(lostMoney);&#10;inputData.getExampleTable().addAttribute(monthWon);&#10;inputData.getAttributes().addRegular(monthWon);&#10;inputData.getExampleTable().addAttribute(monthLost);&#10;inputData.getAttributes().addRegular(monthLost);&#10;inputData.getExampleTable().addAttribute(totalDiff);&#10;inputData.getAttributes().addRegular(totalDiff);&#10;&#10;HashMap&lt;Long, Tuple&lt;Date,Integer&gt;&gt; loanDate = new HashMap&lt;Long, Tuple&lt;Date,Integer&gt;&gt;();&#10;HashMap&lt;Long, Tuple&lt;Date,Integer&gt;&gt; firstBal = new HashMap&lt;Long, Tuple&lt;Date,Integer&gt;&gt;();&#10;HashMap&lt;Long, Integer&gt; firstBal_2 = new HashMap&lt;Long, Integer&gt;();&#10;IOObject finalSet;&#10;long prev_bal = 0;&#10;long add = 0;&#10;long rem = 0;&#10;long total_gain = 0;&#10;long total_lost = 0;&#10;for(Example e : inputData){ //a cada loanId&#10;&#9;long cenas = e.getValue(date);&#10;&#9;converted = new Date(cenas);&#10;&#9;long key = e.getValue(loanId);&#10;&#9;transfer_id = e.getValue(transferId);&#10;&#9;long bal = e.getValue(balance);&#10;&#9;f_values = new Tuple(converted,bal);&#10;&#9;values = new Tuple(converted,transfer_id);&#10;&#9;if(loanDate.containsKey(key)) {&#9;&#10;&#9;&#9;loanDate.put(key,values);&#10;&#9;&#9;int aux = firstBal_2.get(key);&#10;&#9;&#9;firstBal_2.put(key, ++aux);&#10;&#9;&#9;if(bal &gt; prev_bal) {&#10;&#9;&#9;&#9;add++;&#10;&#9;&#9;&#9;total_gain += (bal - prev_bal);&#10;&#9;&#9;&#9;e.setValue(addMoney, add);&#10;&#9;&#9;&#9;e.setValue(removeMoney, rem);&#10;&#9;&#9;&#9;e.setValue(gainMoney,total_gain);&#10;&#9;&#9;&#9;e.setValue(lostMoney,total_lost);&#10;&#9;&#9;} else {&#10;&#9;&#9;&#9;rem++;&#10;&#9;&#9;&#9;total_lost -= (bal - prev_bal);&#10;&#9;&#9;&#9;e.setValue(addMoney, add);&#10;&#9;&#9;&#9;e.setValue(removeMoney, rem);&#10;&#9;&#9;&#9;e.setValue(gainMoney,total_gain);&#10;&#9;&#9;&#9;e.setValue(lostMoney,total_lost);&#10;&#9;&#9;}&#10;&#9;&#9;prev_bal = e.getValue(balance);&#10;&#9;} else {&#10;&#9;&#9;loanDate.put(key, values);&#10;&#9;&#9;firstBal.put(key, f_values);&#10;&#9;&#9;firstBal_2.put(key, 1);&#10;&#9;&#9;prev_bal = e.getValue(balance);&#10;&#9;&#9;e.setValue(removeMoney,0);&#10;&#9;&#9;e.setValue(addMoney,0);&#10;&#9;&#9;e.setValue(gainMoney,0);&#10;&#9;&#9;e.setValue(lostMoney,0);&#10;&#9;&#9;add = 0;&#10;&#9;&#9;rem = 0;&#10;&#9;&#9;total_gain = 0;&#10;&#9;&#9;total_lost = 0;&#10;&#9;}&#10;&#10;}&#10;&#10;for (Long name: loanDate.keySet()){&#10;            long key = name;&#10;            Tuple&lt;Date,Integer&gt; f_value = firstBal.get(name);&#10;            Tuple&lt;Date,Integer&gt; value = loanDate.get(name);  &#10;            int first_trans = f_value.getY();&#10;            int transfer_ids = value.getY();&#10;            Date loan_date = value.getX();&#10;            Date first_date = f_value.getX();&#10;            for(Example k : inputData){&#10;            &#9;int compareId = k.getValue(transferId);&#10;            &#9;if(compareId==transfer_ids){&#10;            &#9;&#9;k.setValue(accurateBalance,1);&#10;            &#9;&#9;int m1 = first_date.getYear() * 12 + first_date.getMonth();&#10;    &#9;&#9;&#9;&#9;int m2 = loan_date.getYear() * 12 + loan_date.getMonth();&#10;    &#9;&#9;&#9;&#9;long calc = (k.getValue(balance) - first_trans) - (m2 - m1 + 1) * k.getValue(payments);&#10;            &#9;&#9;k.setValue(diffBalLoan, calc);&#10;            &#9;&#9;calc = (k.getValue(balance) - first_trans) - (m2 - m1 + 1) * k.getValue(payments);&#10;            &#9;&#9;k.setValue(diffBalLoan2, calc);&#10;            &#9;&#9;k.setValue(monthWon, k.getValue(gainMoney) / (m2 - m1 + 1));&#10;            &#9;&#9;k.setValue(monthLost, k.getValue(lostMoney) / (m2 - m1 + 1));&#10;            &#9;&#9;k.setValue(totalDiff, k.getValue(gainMoney) / k.getValue(lostMoney));&#10;            &#9;&#9;break;&#10;            &#9;}            &#9;&#10;            }         &#10;} &#10;// This line returns the first input as the first output&#10;return inputData;"/>
            <parameter key="standard_imports" value="true"/>
          </operator>
          <operator activated="true" class="filter_examples" compatibility="9.4.001" expanded="true" height="103" name="Filter Examples (2)" width="90" x="782" y="85">
            <parameter key="parameter_string" value="accurateBalance=1"/>
            <parameter key="parameter_expression" value=""/>
            <parameter key="condition_class" value="attribute_value_filter"/>
            <parameter key="invert_filter" value="false"/>
            <list key="filters_list"/>
            <parameter key="filters_logic_and" value="true"/>
            <parameter key="filters_check_metadata" value="true"/>
          </operator>
          <connect from_op="Retrieve loan_test" from_port="output" to_op="Join (6)" to_port="left"/>
          <connect from_op="Retrieve trans_test" from_port="output" to_op="Set Role (4)" to_port="example set input"/>
          <connect from_op="Set Role (4)" from_port="example set output" to_op="Join (6)" to_port="right"/>
          <connect from_op="Join (6)" from_port="join" to_op="Generate Empty Attribute (5)" to_port="example set input"/>
          <connect from_op="Generate Empty Attribute (5)" from_port="example set output" to_op="Generate Empty Attribute (6)" to_port="example set input"/>
          <connect from_op="Generate Empty Attribute (6)" from_port="example set output" to_op="Execute Script (3)" to_port="input 1"/>
          <connect from_op="Execute Script (3)" from_port="output 1" to_op="Filter Examples (2)" to_port="example set input"/>
          <connect from_op="Filter Examples (2)" from_port="example set output" to_port="out 1"/>
          <portSpacing port="source_in 1" spacing="0"/>
          <portSpacing port="sink_out 1" spacing="0"/>
          <portSpacing port="sink_out 2" spacing="0"/>
        </process>
      </operator>
      <operator activated="true" class="select_attributes" compatibility="9.4.001" expanded="true" height="82" name="Loan/Transaction (2)" width="90" x="380" y="799">
        <parameter key="attribute_filter_type" value="single"/>
        <parameter key="attribute" value="accurateBalance"/>
        <parameter key="attributes" value=""/>
        <parameter key="use_except_expression" value="false"/>
        <parameter key="value_type" value="attribute_value"/>
        <parameter key="use_value_type_exception" value="false"/>
        <parameter key="except_value_type" value="time"/>
        <parameter key="block_type" value="attribute_block"/>
        <parameter key="use_block_type_exception" value="false"/>
        <parameter key="except_block_type" value="value_matrix_row_start"/>
        <parameter key="invert_selection" value="true"/>
        <parameter key="include_special_attributes" value="false"/>
      </operator>
      <operator activated="true" class="retrieve" compatibility="9.4.001" expanded="true" height="68" name="Retrieve card_test" width="90" x="179" y="1309">
        <parameter key="repository_entry" value="../data_transformed/card_test"/>
      </operator>
      <operator activated="true" class="set_role" compatibility="9.4.001" expanded="true" height="82" name="Set Role (5)" width="90" x="313" y="1309">
        <parameter key="attribute_name" value="card_id"/>
        <parameter key="target_role" value="regular"/>
        <list key="set_additional_roles"/>
      </operator>
      <operator activated="true" class="rename" compatibility="9.4.001" expanded="true" height="82" name="Rename (3)" width="90" x="581" y="1258">
        <parameter key="old_name" value="type"/>
        <parameter key="new_name" value="typeOfCard"/>
        <list key="rename_additional_attributes"/>
        <description align="center" color="transparent" colored="false" width="126">Card Disposition&lt;br/&gt;by Client/Account&lt;br/&gt;</description>
      </operator>
      <operator activated="true" class="retrieve" compatibility="9.4.001" expanded="true" height="68" name="Retrieve disp (2)" width="90" x="179" y="1207">
        <parameter key="repository_entry" value="../data_transformed/disp"/>
      </operator>
      <operator activated="true" class="set_role" compatibility="9.4.001" expanded="true" height="82" name="Set Role (8)" width="90" x="313" y="1207">
        <parameter key="attribute_name" value="disp_id"/>
        <parameter key="target_role" value="regular"/>
        <list key="set_additional_roles"/>
      </operator>
      <operator activated="true" class="retrieve" compatibility="9.4.001" expanded="true" height="68" name="Retrieve client (2)" width="90" x="179" y="1105">
        <parameter key="repository_entry" value="../data_transformed/client"/>
      </operator>
      <operator activated="true" class="concurrency:join" compatibility="9.4.001" expanded="true" height="82" name="Join (7)" width="90" x="447" y="1156">
        <parameter key="remove_double_attributes" value="true"/>
        <parameter key="join_type" value="inner"/>
        <parameter key="use_id_attribute_as_key" value="false"/>
        <list key="key_attributes">
          <parameter key="client_id" value="client_id"/>
        </list>
        <parameter key="keep_both_join_attributes" value="false"/>
      </operator>
      <operator activated="true" class="set_role" compatibility="9.4.001" expanded="true" height="82" name="Set Role (9)" width="90" x="581" y="1156">
        <parameter key="attribute_name" value="client_id"/>
        <parameter key="target_role" value="regular"/>
        <list key="set_additional_roles">
          <parameter key="client_id" value="regular"/>
          <parameter key="type_disp" value="regular"/>
        </list>
      </operator>
      <operator activated="true" class="retrieve" compatibility="9.4.001" expanded="true" height="68" name="Retrieve district (2)" width="90" x="179" y="1003">
        <parameter key="repository_entry" value="../data_transformed/district"/>
      </operator>
      <operator activated="true" class="set_role" compatibility="9.4.001" expanded="true" height="82" name="Set Role (10)" width="90" x="313" y="1003">
        <parameter key="attribute_name" value="district_id"/>
        <parameter key="target_role" value="regular"/>
        <list key="set_additional_roles"/>
      </operator>
      <operator activated="true" class="retrieve" compatibility="9.4.001" expanded="true" height="68" name="Retrieve account (2)" width="90" x="179" y="901">
        <parameter key="repository_entry" value="../data_transformed/account"/>
      </operator>
      <operator activated="true" class="rename" compatibility="9.4.001" expanded="true" height="82" name="Rename (4)" width="90" x="313" y="901">
        <parameter key="old_name" value="date"/>
        <parameter key="new_name" value="dateOfAccount"/>
        <list key="rename_additional_attributes"/>
      </operator>
      <operator activated="true" class="concurrency:join" compatibility="9.4.001" expanded="true" height="82" name="Account/Demographic (2)" width="90" x="447" y="952">
        <parameter key="remove_double_attributes" value="true"/>
        <parameter key="join_type" value="inner"/>
        <parameter key="use_id_attribute_as_key" value="false"/>
        <list key="key_attributes">
          <parameter key="district_id" value="district_id"/>
        </list>
        <parameter key="keep_both_join_attributes" value="false"/>
      </operator>
      <operator activated="true" class="select_attributes" compatibility="9.4.001" expanded="true" height="82" name="Select Attributes (2)" width="90" x="648" y="952">
        <parameter key="attribute_filter_type" value="single"/>
        <parameter key="attribute" value="district_id"/>
        <parameter key="attributes" value=""/>
        <parameter key="use_except_expression" value="false"/>
        <parameter key="value_type" value="attribute_value"/>
        <parameter key="use_value_type_exception" value="false"/>
        <parameter key="except_value_type" value="time"/>
        <parameter key="block_type" value="attribute_block"/>
        <parameter key="use_block_type_exception" value="false"/>
        <parameter key="except_block_type" value="value_matrix_row_start"/>
        <parameter key="invert_selection" value="true"/>
        <parameter key="include_special_attributes" value="false"/>
      </operator>
      <operator activated="true" class="concurrency:join" compatibility="9.4.001" expanded="true" height="82" name="Join (8)" width="90" x="782" y="799">
        <parameter key="remove_double_attributes" value="false"/>
        <parameter key="join_type" value="inner"/>
        <parameter key="use_id_attribute_as_key" value="false"/>
        <list key="key_attributes">
          <parameter key="account_id" value="account_id"/>
        </list>
        <parameter key="keep_both_join_attributes" value="false"/>
      </operator>
      <operator activated="true" class="concurrency:join" compatibility="9.4.001" expanded="true" height="82" name="Join (9)" width="90" x="916" y="952">
        <parameter key="remove_double_attributes" value="true"/>
        <parameter key="join_type" value="inner"/>
        <parameter key="use_id_attribute_as_key" value="false"/>
        <list key="key_attributes">
          <parameter key="account_id" value="account_id"/>
        </list>
        <parameter key="keep_both_join_attributes" value="false"/>
      </operator>
      <operator activated="true" class="concurrency:join" compatibility="9.4.001" expanded="true" height="82" name="Join (10)" width="90" x="1050" y="1105">
        <parameter key="remove_double_attributes" value="true"/>
        <parameter key="join_type" value="left"/>
        <parameter key="use_id_attribute_as_key" value="false"/>
        <list key="key_attributes">
          <parameter key="disp_id" value="disp_id"/>
        </list>
        <parameter key="keep_both_join_attributes" value="false"/>
      </operator>
      <operator activated="true" class="generate_empty_attribute" compatibility="9.4.001" expanded="true" height="82" name="Generate Empty Attribute (7)" width="90" x="1184" y="1105">
        <parameter key="name" value="percPayment"/>
        <parameter key="value_type" value="real"/>
      </operator>
      <operator activated="true" class="generate_empty_attribute" compatibility="9.4.001" expanded="true" height="82" name="Generate Empty Attribute (8)" width="90" x="1318" y="1105">
        <parameter key="name" value="numClients"/>
        <parameter key="value_type" value="integer"/>
      </operator>
      <operator activated="true" class="generate_attributes" compatibility="9.4.001" expanded="true" height="82" name="Generate Attributes" width="90" x="1452" y="442">
        <list key="function_descriptions">
          <parameter key="age_loan_owner" value="if(type_disp == &quot;OWNER&quot;,floor(date_diff(birth_date,date_loan)/(1000*60*60*24*365.25)),0)"/>
          <parameter key="age_loan_disponent" value="if(type_disp == &quot;DISPONENT&quot;,floor(date_diff(birth_date,date_loan)/(1000*60*60*24*365.25)),0)"/>
          <parameter key="percentage_loan_entry" value="(last_balance/amount)*100"/>
          <parameter key="percentage_payments_credit_withdrawal" value="(difference_credit_withdrawal/payments)*100"/>
          <parameter key="total_debt_before_loan" value="household_debt+insurance_debt+other_debts"/>
          <parameter key="total_debt_after_loan" value="household_debt+insurance_debt+other_debts+payments"/>
          <parameter key="debts_to_income_ratio_before_loan" value="total_debt_before_loan/average_credit_per_month"/>
          <parameter key="debts_to_income_ratio_after_loan" value="total_debt_after_loan/average_credit_per_month"/>
          <parameter key="diff_credit_debts_before_loan" value="average_credit_per_month - total_debt_before_loan"/>
          <parameter key="diff_credit_debts_after_loan" value="average_credit_per_month - total_debt_after_loan"/>
          <parameter key="estimated_balance_end_loan" value="last_balance + diff_credit_debts_after_loan * duration"/>
        </list>
        <parameter key="keep_all" value="true"/>
      </operator>
      <operator activated="true" class="execute_script" compatibility="9.4.001" expanded="true" height="82" name="Execute Script (2)" width="90" x="1586" y="442">
        <parameter key="script" value="//getting the current table&#10;IOObject  inputData  =  input[0];&#10;&#10;//getting the attributes of the current table&#10;Attribute rowId       = inputData.getAttributes().get(&quot;Row No.&quot;);&#10;Attribute loanId      = inputData.getAttributes().get(&quot;loan_id&quot;);&#10;Attribute clientId    = inputData.getAttributes().get(&quot;client_id&quot;);&#10;Attribute typeClient  = inputData.getAttributes().get(&quot;type_disp&quot;);&#10;Attribute balance     = inputData.getAttributes().get(&quot;balance&quot;);&#10;Attribute payments    = inputData.getAttributes().get(&quot;payments&quot;);&#10;Attribute percPayment = inputData.getAttributes().get(&quot;percPayment&quot;);&#10;Attribute numClients  = inputData.getAttributes().get(&quot;numClients&quot;);&#10;Attribute owner  = inputData.getAttributes().get(&quot;age_loan_owner&quot;);&#10;Attribute disponent  = inputData.getAttributes().get(&quot;age_loan_disponent&quot;);&#10;&#10;//pair class&#10;public class Tuple&lt;X, Y&gt; { &#10;  public final X x; &#10;  public final Y y; &#10;  public Tuple(X x, Y y) { &#10;    this.x = x; &#10;    this.y = y; &#10;  } &#10;  public getX(){&#10;  &#9;return this.x;&#10;  }&#10;  public getY(){&#10;  &#9;return this.y;&#10;  }&#10;} &#10;&#10;//creating map of repetitions&#10;HashMap&lt;Integer, Integer&gt; count = new HashMap&lt;Integer, Integer&gt;();&#10;HashMap&lt;Integer, Integer&gt; dispage = new HashMap&lt;Integer, Integer&gt;();&#10;//adding the percentagePayment&#10;for(Example e : inputData){&#9;&#10;&#9;int loan = e.getValue(loanId);&#10;&#9;int type = e.getValue(typeClient);&#9;&#10;&#9;if(count.containsKey(loan)) {&#10;&#9;&#9;int value = count.get(loan);&#10;&#9;&#9;//if(value)&#10;&#9;&#9;count.put(loan, ++value);&#9;&#10;&#9;&#9;if(!type)&#10;&#9;&#9;&#9;e.setValue(numClients, 1); //set that has 1 person&#10;&#9;&#9;else {&#10;&#9;&#9;&#9;dispage.put(loan, e.getValue(disponent));&#10;&#9;&#9;&#9;e.setValue(numClients, 0);&#10;&#9;&#9;}&#10;&#9;} else {&#10;&#9;&#9;count.put(loan,1);&#10;&#9;&#9;if(!type)&#10;&#9;&#9;&#9;e.setValue(numClients, 1); //set that has 1 person&#10;&#9;&#9;else {&#10;&#9;&#9;&#9;e.setValue(numClients, 0);&#10;&#9;&#9;&#9;dispage.put(loan, e.getValue(disponent));&#10;&#9;&#9;}&#10;&#9;&#9;&#9;&#10;&#9;}&#10;&#9;long bal  = e.getValue(balance);&#10;&#9;long pay  = e.getValue(payments);&#10;&#9;e.setValue(percPayment, (bal/pay));&#10;}&#10;&#10;for(Example e : inputData){&#9;&#10;&#9;int loan = e.getValue(loanId);&#10;&#9;if(count.containsKey(loan)) {&#10;&#9;&#9;if(count.get(loan) == 2 &amp;&amp; !e.getValue(typeClient)) {&#10;&#9;&#9;&#9;e.setValue(numClients, 2);&#9;&#10;&#9;&#9;&#9;e.setValue(disponent, dispage.get(loan));&#9;&#9;&#10;&#9;&#9;}&#10;&#9;&#9;else&#10;&#9;&#9;&#9;if(count.get(loan) == 2)&#10;&#9;&#9;&#9;&#9;operator.logNote(e.getValue(typeClient).toString());&#10;&#9;} &#10;}&#10;// This line returns the first input as the first output&#10;return inputData;"/>
        <parameter key="standard_imports" value="true"/>
      </operator>
      <operator activated="true" class="filter_examples" compatibility="9.4.001" expanded="true" height="103" name="Filter Examples (3)" width="90" x="1720" y="442">
        <parameter key="parameter_expression" value=""/>
        <parameter key="condition_class" value="custom_filters"/>
        <parameter key="invert_filter" value="false"/>
        <list key="filters_list">
          <parameter key="filters_entry_key" value="numClients.ne.0"/>
        </list>
        <parameter key="filters_logic_and" value="true"/>
        <parameter key="filters_check_metadata" value="true"/>
      </operator>
      <operator activated="true" class="set_role" compatibility="9.4.001" expanded="true" height="82" name="Set Role (11)" width="90" x="1854" y="442">
        <parameter key="attribute_name" value="status"/>
        <parameter key="target_role" value="label"/>
        <list key="set_additional_roles"/>
      </operator>
      <operator activated="true" class="set_role" compatibility="9.4.001" expanded="true" height="82" name="Set Role (13)" width="90" x="1988" y="442">
        <parameter key="attribute_name" value="loan_id"/>
        <parameter key="target_role" value="id"/>
        <list key="set_additional_roles"/>
      </operator>
      <operator activated="true" class="store" compatibility="9.4.001" expanded="true" height="68" name="Store" width="90" x="2122" y="442">
        <parameter key="repository_entry" value="../data_transformed/joined_data_train"/>
      </operator>
      <operator activated="true" class="generate_attributes" compatibility="9.4.001" expanded="true" height="82" name="Generate Attributes (2)" width="90" x="1452" y="1105">
        <list key="function_descriptions">
          <parameter key="age_loan_owner" value="if(type_disp == &quot;OWNER&quot;,floor(date_diff(birth_date,date_loan)/(1000*60*60*24*365.25)),0)"/>
          <parameter key="age_loan_disponent" value="if(type_disp == &quot;DISPONENT&quot;,floor(date_diff(birth_date,date_loan)/(1000*60*60*24*365.25)),0)"/>
          <parameter key="percentage_loan_entry" value="(last_balance/amount)*100"/>
          <parameter key="percentage_payments_credit_withdrawal" value="(difference_credit_withdrawal/payments)*100"/>
          <parameter key="total_debt_before_loan" value="household_debt+insurance_debt+other_debts"/>
          <parameter key="total_debt_after_loan" value="household_debt+insurance_debt+other_debts+payments"/>
          <parameter key="debts_to_income_ratio_before_loan" value="total_debt_before_loan/average_credit_per_month"/>
          <parameter key="debts_to_income_ratio_after_loan" value="total_debt_after_loan/average_credit_per_month"/>
          <parameter key="diff_credit_debts_before_loan" value="average_credit_per_month - total_debt_before_loan"/>
          <parameter key="diff_credit_debts_after_loan" value="average_credit_per_month - total_debt_after_loan"/>
          <parameter key="estimated_balance_end_loan" value="last_balance + diff_credit_debts_after_loan * duration"/>
        </list>
        <parameter key="keep_all" value="true"/>
      </operator>
      <operator activated="true" class="execute_script" compatibility="9.4.001" expanded="true" height="82" name="Execute Script (4)" width="90" x="1586" y="1105">
        <parameter key="script" value="//getting the current table&#10;IOObject  inputData  =  input[0];&#10;&#10;//getting the attributes of the current table&#10;Attribute rowId       = inputData.getAttributes().get(&quot;Row No.&quot;);&#10;Attribute loanId      = inputData.getAttributes().get(&quot;loan_id&quot;);&#10;Attribute clientId    = inputData.getAttributes().get(&quot;client_id&quot;);&#10;Attribute typeClient  = inputData.getAttributes().get(&quot;type_disp&quot;);&#10;Attribute balance     = inputData.getAttributes().get(&quot;balance&quot;);&#10;Attribute payments    = inputData.getAttributes().get(&quot;payments&quot;);&#10;Attribute percPayment = inputData.getAttributes().get(&quot;percPayment&quot;);&#10;Attribute numClients  = inputData.getAttributes().get(&quot;numClients&quot;);&#10;Attribute owner  = inputData.getAttributes().get(&quot;age_loan_owner&quot;);&#10;Attribute disponent  = inputData.getAttributes().get(&quot;age_loan_disponent&quot;);&#10;&#10;//pair class&#10;public class Tuple&lt;X, Y&gt; { &#10;  public final X x; &#10;  public final Y y; &#10;  public Tuple(X x, Y y) { &#10;    this.x = x; &#10;    this.y = y; &#10;  } &#10;  public getX(){&#10;  &#9;return this.x;&#10;  }&#10;  public getY(){&#10;  &#9;return this.y;&#10;  }&#10;} &#10;&#10;//creating map of repetitions&#10;HashMap&lt;Integer, Integer&gt; count = new HashMap&lt;Integer, Integer&gt;();&#10;HashMap&lt;Integer, Integer&gt; dispage = new HashMap&lt;Integer, Integer&gt;();&#10;//adding the percentagePayment&#10;for(Example e : inputData){&#9;&#10;&#9;int loan = e.getValue(loanId);&#10;&#9;int type = e.getValue(typeClient);&#9;&#10;&#9;if(count.containsKey(loan)) {&#10;&#9;&#9;int value = count.get(loan);&#10;&#9;&#9;//if(value)&#10;&#9;&#9;count.put(loan, ++value);&#9;&#10;&#9;&#9;if(!type)&#10;&#9;&#9;&#9;e.setValue(numClients, 1); //set that has 1 person&#10;&#9;&#9;else {&#10;&#9;&#9;&#9;dispage.put(loan, e.getValue(disponent));&#10;&#9;&#9;&#9;e.setValue(numClients, 0);&#10;&#9;&#9;}&#10;&#9;} else {&#10;&#9;&#9;count.put(loan,1);&#10;&#9;&#9;if(!type)&#10;&#9;&#9;&#9;e.setValue(numClients, 1); //set that has 1 person&#10;&#9;&#9;else {&#10;&#9;&#9;&#9;e.setValue(numClients, 0);&#10;&#9;&#9;&#9;dispage.put(loan, e.getValue(disponent));&#10;&#9;&#9;}&#10;&#9;&#9;&#9;&#10;&#9;}&#10;&#9;long bal  = e.getValue(balance);&#10;&#9;long pay  = e.getValue(payments);&#10;&#9;e.setValue(percPayment, (bal/pay));&#10;}&#10;&#10;for(Example e : inputData){&#9;&#10;&#9;int loan = e.getValue(loanId);&#10;&#9;if(count.containsKey(loan)) {&#10;&#9;&#9;if(count.get(loan) == 2 &amp;&amp; !e.getValue(typeClient)) {&#10;&#9;&#9;&#9;e.setValue(numClients, 2);&#9;&#10;&#9;&#9;&#9;e.setValue(disponent, dispage.get(loan));&#9;&#9;&#10;&#9;&#9;}&#10;&#9;&#9;else&#10;&#9;&#9;&#9;if(count.get(loan) == 2)&#10;&#9;&#9;&#9;&#9;operator.logNote(e.getValue(typeClient).toString());&#10;&#9;} &#10;}&#10;// This line returns the first input as the first output&#10;return inputData;"/>
        <parameter key="standard_imports" value="true"/>
      </operator>
      <operator activated="true" class="filter_examples" compatibility="9.4.001" expanded="true" height="103" name="Filter Examples (4)" width="90" x="1720" y="1105">
        <parameter key="parameter_expression" value=""/>
        <parameter key="condition_class" value="custom_filters"/>
        <parameter key="invert_filter" value="false"/>
        <list key="filters_list">
          <parameter key="filters_entry_key" value="numClients.ne.0"/>
        </list>
        <parameter key="filters_logic_and" value="true"/>
        <parameter key="filters_check_metadata" value="true"/>
      </operator>
      <operator activated="true" class="set_role" compatibility="9.4.001" expanded="true" height="82" name="Set Role (12)" width="90" x="1854" y="1105">
        <parameter key="attribute_name" value="status"/>
        <parameter key="target_role" value="label"/>
        <list key="set_additional_roles"/>
      </operator>
      <operator activated="true" class="store" compatibility="9.4.001" expanded="true" height="68" name="Store (2)" width="90" x="1988" y="1105">
        <parameter key="repository_entry" value="../data_transformed/joined_data_test"/>
      </operator>
      <connect from_op="Loan/Transaction Pre" from_port="out 1" to_op="Loan/Transaction" to_port="example set input"/>
      <connect from_op="Loan/Transaction" from_port="example set output" to_op="Join (5)" to_port="left"/>
      <connect from_op="Retrieve card_train" from_port="output" to_op="Set Role (2)" to_port="example set input"/>
      <connect from_op="Set Role (2)" from_port="example set output" to_op="Rename" to_port="example set input"/>
      <connect from_op="Rename" from_port="example set output" to_op="Join (3)" to_port="right"/>
      <connect from_op="Retrieve disp" from_port="output" to_op="Set Role (6)" to_port="example set input"/>
      <connect from_op="Set Role (6)" from_port="example set output" to_op="Join (4)" to_port="right"/>
      <connect from_op="Retrieve client" from_port="output" to_op="Join (4)" to_port="left"/>
      <connect from_op="Join (4)" from_port="join" to_op="Set Role (7)" to_port="example set input"/>
      <connect from_op="Set Role (7)" from_port="example set output" to_op="Join (2)" to_port="right"/>
      <connect from_op="Retrieve district" from_port="output" to_op="Set Role (3)" to_port="example set input"/>
      <connect from_op="Set Role (3)" from_port="example set output" to_op="Account/Demographic" to_port="right"/>
      <connect from_op="Retrieve account" from_port="output" to_op="Rename (2)" to_port="example set input"/>
      <connect from_op="Rename (2)" from_port="example set output" to_op="Account/Demographic" to_port="left"/>
      <connect from_op="Account/Demographic" from_port="join" to_op="Select Attributes" to_port="example set input"/>
      <connect from_op="Select Attributes" from_port="example set output" to_op="Join (5)" to_port="right"/>
      <connect from_op="Join (5)" from_port="join" to_op="Join (2)" to_port="left"/>
      <connect from_op="Join (2)" from_port="join" to_op="Join (3)" to_port="left"/>
      <connect from_op="Join (3)" from_port="join" to_op="Generate Empty Attribute" to_port="example set input"/>
      <connect from_op="Generate Empty Attribute" from_port="example set output" to_op="Generate Empty Attribute (2)" to_port="example set input"/>
      <connect from_op="Generate Empty Attribute (2)" from_port="example set output" to_op="Generate Attributes" to_port="example set input"/>
      <connect from_op="Loan/Transaction Pre (2)" from_port="out 1" to_op="Loan/Transaction (2)" to_port="example set input"/>
      <connect from_op="Loan/Transaction (2)" from_port="example set output" to_op="Join (8)" to_port="left"/>
      <connect from_op="Retrieve card_test" from_port="output" to_op="Set Role (5)" to_port="example set input"/>
      <connect from_op="Set Role (5)" from_port="example set output" to_op="Rename (3)" to_port="example set input"/>
      <connect from_op="Rename (3)" from_port="example set output" to_op="Join (10)" to_port="right"/>
      <connect from_op="Retrieve disp (2)" from_port="output" to_op="Set Role (8)" to_port="example set input"/>
      <connect from_op="Set Role (8)" from_port="example set output" to_op="Join (7)" to_port="right"/>
      <connect from_op="Retrieve client (2)" from_port="output" to_op="Join (7)" to_port="left"/>
      <connect from_op="Join (7)" from_port="join" to_op="Set Role (9)" to_port="example set input"/>
      <connect from_op="Set Role (9)" from_port="example set output" to_op="Join (9)" to_port="right"/>
      <connect from_op="Retrieve district (2)" from_port="output" to_op="Set Role (10)" to_port="example set input"/>
      <connect from_op="Set Role (10)" from_port="example set output" to_op="Account/Demographic (2)" to_port="right"/>
      <connect from_op="Retrieve account (2)" from_port="output" to_op="Rename (4)" to_port="example set input"/>
      <connect from_op="Rename (4)" from_port="example set output" to_op="Account/Demographic (2)" to_port="left"/>
      <connect from_op="Account/Demographic (2)" from_port="join" to_op="Select Attributes (2)" to_port="example set input"/>
      <connect from_op="Select Attributes (2)" from_port="example set output" to_op="Join (8)" to_port="right"/>
      <connect from_op="Join (8)" from_port="join" to_op="Join (9)" to_port="left"/>
      <connect from_op="Join (9)" from_port="join" to_op="Join (10)" to_port="left"/>
      <connect from_op="Join (10)" from_port="join" to_op="Generate Empty Attribute (7)" to_port="example set input"/>
      <connect from_op="Generate Empty Attribute (7)" from_port="example set output" to_op="Generate Empty Attribute (8)" to_port="example set input"/>
      <connect from_op="Generate Empty Attribute (8)" from_port="example set output" to_op="Generate Attributes (2)" to_port="example set input"/>
      <connect from_op="Generate Attributes" from_port="example set output" to_op="Execute Script (2)" to_port="input 1"/>
      <connect from_op="Execute Script (2)" from_port="output 1" to_op="Filter Examples (3)" to_port="example set input"/>
      <connect from_op="Filter Examples (3)" from_port="example set output" to_op="Set Role (11)" to_port="example set input"/>
      <connect from_op="Set Role (11)" from_port="example set output" to_op="Set Role (13)" to_port="example set input"/>
      <connect from_op="Set Role (13)" from_port="example set output" to_op="Store" to_port="input"/>
      <connect from_op="Generate Attributes (2)" from_port="example set output" to_op="Execute Script (4)" to_port="input 1"/>
      <connect from_op="Execute Script (4)" from_port="output 1" to_op="Filter Examples (4)" to_port="example set input"/>
      <connect from_op="Filter Examples (4)" from_port="example set output" to_op="Set Role (12)" to_port="example set input"/>
      <connect from_op="Set Role (12)" from_port="example set output" to_op="Store (2)" to_port="input"/>
      <portSpacing port="source_input 1" spacing="0"/>
      <portSpacing port="sink_result 1" spacing="0"/>
    </process>
  </operator>
</process>
